/gen {
    {                       % n
        dup                 % n n
        10 lt { exit } if   % n
        dup 10 mod          % d n
        exch 10 idiv        % r d
    } loop
} def

/digits { [ exch gen ] } def

/find {                     % op _ A
    exch                    % _ op A
    3 -1 roll               % A _ op 
    false                   % F A _ op
    4 1 roll                % A _ op F
    {                       % n p op F
        exch                % p n op F
        1 index             % n p n op F
        3 index             % op n p n op F
        exec                % found? n op F
        {                   % n op F
            3 -1 roll       % F n op 
            not             % T n op 
            3 1 roll        % n op T
            exit
        } 
        if
    } forall
    pop pop                 % found?
} def

% A -> valid?
/adjacent {                 % A
    0                       % c A
    false                   % p c A
    3 -1 roll               % A p c
    {                       % n p c
        exch                % p n c 
        1 index             % n p n c
        eq                  % eq? n c 
        {                   % n c
            exch            % c n 
            1 add           % c+1 n
            exch            % n c+1
        }
        {                   % n c 
            exch            % c n 
            dup             % c c n 
            2 eq            % c=2? c n 
            {               % 2 n
                exch        % n 2
                exit        % n 2 --- exit loop
            }
            {               % c!=2 n 
                pop 1       % 1 n
                exch        % n 1
            } ifelse        % n 1
        }
        ifelse
    } forall                % n c
    pop                     % c 
    2 eq                    % pair?
} def

% ds -> valid? 
/ascending {
    10 { lt } find not
} def 

/valid {
    digits                % ds
    dup                   % ds ds
    adjacent              % b ds
    exch                  % ds b
    ascending             % b b 
    and                   % b
} def 

/main {
    0
    183564 1 657474 {
        valid { 1 add } if
    } for
} def

main
