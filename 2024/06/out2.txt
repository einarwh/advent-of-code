41
EXISTING [(0, 8); (1, 6); (2, 3); (4, 0); (6, 9); (7, 4); (8, 7); (9, 1)]
ROUTE [(4, 6); (4, 5); (4, 4); (4, 3); (4, 2); (4, 1); (5, 1); (6, 1); (7, 1); (8, 1);
 (8, 2); (8, 3); (8, 4); (8, 5); (8, 6); (7, 6); (6, 6); (5, 6); (4, 6); (3, 6);
 (2, 6); (2, 5); (2, 4); (3, 4); (4, 4); (5, 4); (6, 4); (6, 5); (6, 6); (6, 7);
 (6, 8); (5, 8); (4, 8); (3, 8); (2, 8); (1, 8); (1, 7); (2, 7); (3, 7); (4, 7);
 (5, 7); (6, 7); (7, 7); (7, 8); (7, 9)]
ALL CANDIDATES [(1, 7); (1, 8); (2, 4); (2, 5); (2, 6); (2, 7); (2, 8); (3, 4); (3, 6); (3, 7);
 (3, 8); (4, 1); (4, 2); (4, 3); (4, 4); (4, 5); (4, 6); (4, 7); (4, 8); (5, 1);
 (5, 4); (5, 6); (5, 7); (5, 8); (6, 1); (6, 4); (6, 5); (6, 6); (6, 7); (6, 8);
 (7, 1); (7, 6); (7, 7); (7, 8); (7, 9); (8, 1); (8, 2); (8, 3); (8, 4); (8, 5);
 (8, 6)]
================
Adding obstruction at (1, 7)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1));
   ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0));
   ((3, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (1, 7)
Move to (1, 8)
Add moves set [((1, 8), (0, -1))]
No overlap!

At (1, 8) facing (1, 0) having visited set
  [((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 4), (0, -1)); ((2, 4), (1, 0));
   ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0));
   ((3, 4), (1, 0)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (1, 8)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 8)
Move to (2, 8)
Add moves set
  [((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0)); ((5, 8), (-1, 0));
   ((6, 8), (-1, 0))]
No overlap!

At (2, 8) facing (0, -1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0)); ((3, 6), (-1, 0));
   ((3, 8), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1)); ((2, 7), (0, -1));
   ((2, 8), (0, -1))]
Overlap found -> there was a loop!
================
Adding obstruction at (2, 4)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Obstacle 4); (Obstacle 4, Outside)]
Found obstacle at (2, 4)
Move to (2, 5)
Add moves set [((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 5) facing (1, 0) having visited set
  [((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((3, 6), (-1, 0));
   ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (2, 5)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Obstacle 5); (Obstacle 5, Outside)]
Found obstacle at (2, 5)
Move to (2, 6)
Add moves set [((2, 6), (0, -1))]
No overlap!

At (2, 6) facing (1, 0) having visited set
  [((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (2, 6)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Obstacle 2); (Obstacle 2, Outside)]
Found obstacle at (2, 6)
Move to (3, 6)
Add moves set
  [((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0)); ((6, 6), (-1, 0));
   ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (3, 6) facing (0, -1) having visited set
  [((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (-1, 0));
   ((4, 6), (0, -1)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (2, 7)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1));
   ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0));
   ((3, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 4), (0, -1));
   ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((2, 8), (-1, 0)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 2); (Obstacle 2, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (2, 7)
Move to (1, 7)
Add moves set [((1, 7), (1, 0))]
No overlap!

At (1, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Moving S
tryFindLargest: 7 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found no obstacle - exiting. No loop.
((1, 7), (1, 0))
((1, 7), (0, -1))
((1, 8), (0, -1))
((1, 8), (-1, 0))
((2, 8), (-1, 0))
((3, 8), (-1, 0))
((4, 8), (-1, 0))
((5, 8), (-1, 0))
((6, 8), (-1, 0))
((6, 8), (0, 1))
((6, 7), (0, 1))
((6, 6), (0, 1))
((6, 5), (0, 1))
((6, 4), (0, 1))
((6, 4), (1, 0))
((5, 4), (1, 0))
((4, 4), (1, 0))
((3, 4), (1, 0))
((2, 4), (1, 0))
((2, 4), (0, -1))
((2, 5), (0, -1))
((2, 6), (0, -1))
((2, 6), (-1, 0))
((3, 6), (-1, 0))
((4, 6), (-1, 0))
((5, 6), (-1, 0))
((6, 6), (-1, 0))
((7, 6), (-1, 0))
((8, 6), (-1, 0))
((8, 6), (0, 1))
((8, 5), (0, 1))
((8, 4), (0, 1))
((8, 3), (0, 1))
((8, 2), (0, 1))
((8, 1), (0, 1))
((8, 1), (1, 0))
((7, 1), (1, 0))
((6, 1), (1, 0))
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (2, 8)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 2); (Obstacle 2, Outside)]
Found obstacle at (2, 8)
Move to (3, 8)
Add moves set [((3, 8), (-1, 0)); ((4, 8), (-1, 0)); ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (3, 8) facing (0, -1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((3, 8), (-1, 0));
   ((4, 1), (0, -1)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (3, 4)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 3); (Obstacle 3, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (3, 4)
Move to (2, 4)
Add moves set [((2, 4), (1, 0))]
No overlap!

At (2, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found no obstacle - exiting. No loop.
((2, 4), (1, 0))
((2, 4), (0, -1))
((2, 5), (0, -1))
((2, 6), (0, -1))
((2, 6), (-1, 0))
((3, 6), (-1, 0))
((4, 6), (-1, 0))
((5, 6), (-1, 0))
((6, 6), (-1, 0))
((7, 6), (-1, 0))
((8, 6), (-1, 0))
((8, 6), (0, 1))
((8, 5), (0, 1))
((8, 4), (0, 1))
((8, 3), (0, 1))
((8, 2), (0, 1))
((8, 1), (0, 1))
((8, 1), (1, 0))
((7, 1), (1, 0))
((6, 1), (1, 0))
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (3, 6)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (3, 6)
Move to (4, 6)
Add moves set
  [((4, 6), (-1, 0)); ((5, 6), (-1, 0)); ((6, 6), (-1, 0)); ((7, 6), (-1, 0));
   ((8, 6), (-1, 0))]
No overlap!

At (4, 6) facing (0, -1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (-1, 0)); ((4, 6), (0, -1));
   ((5, 1), (1, 0)); ...]
Found loop!
================
Adding obstruction at (3, 7)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1));
   ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0));
   ((3, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 4), (0, -1));
   ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((2, 8), (-1, 0)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 3); (Obstacle 3, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (3, 7)
Move to (2, 7)
Add moves set [((1, 7), (1, 0)); ((2, 7), (1, 0))]
No overlap!

At (2, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Moving S
tryFindLargest: 7 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found no obstacle - exiting. No loop.
((2, 7), (1, 0))
((1, 7), (1, 0))
((1, 7), (0, -1))
((1, 8), (0, -1))
((1, 8), (-1, 0))
((2, 8), (-1, 0))
((3, 8), (-1, 0))
((4, 8), (-1, 0))
((5, 8), (-1, 0))
((6, 8), (-1, 0))
((6, 8), (0, 1))
((6, 7), (0, 1))
((6, 6), (0, 1))
((6, 5), (0, 1))
((6, 4), (0, 1))
((6, 4), (1, 0))
((5, 4), (1, 0))
((4, 4), (1, 0))
((3, 4), (1, 0))
((2, 4), (1, 0))
((2, 4), (0, -1))
((2, 5), (0, -1))
((2, 6), (0, -1))
((2, 6), (-1, 0))
((3, 6), (-1, 0))
((4, 6), (-1, 0))
((5, 6), (-1, 0))
((6, 6), (-1, 0))
((7, 6), (-1, 0))
((8, 6), (-1, 0))
((8, 6), (0, 1))
((8, 5), (0, 1))
((8, 4), (0, 1))
((8, 3), (0, 1))
((8, 2), (0, 1))
((8, 1), (0, 1))
((8, 1), (1, 0))
((7, 1), (1, 0))
((6, 1), (1, 0))
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (3, 8)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (3, 8)
Move to (4, 8)
Add moves set [((4, 8), (-1, 0)); ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (4, 8) facing (0, -1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((4, 7), (0, -1)); ((4, 8), (0, -1))]
Overlap found -> there was a loop!
================
Adding obstruction at (4, 1)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (4, 1)
Move to (4, 2)
Add moves set
  [((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (0, -1))]
No overlap!

At (4, 2) facing (1, 0) having visited set
  [((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (4, 2)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 2); (Obstacle 2, Outside)]
Found obstacle at (4, 2)
Move to (4, 3)
Add moves set [((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 3) facing (1, 0) having visited set [((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 2); (Obstacle 2, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (4, 3)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (4, 3)
Move to (4, 4)
Add moves set [((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 4) facing (1, 0) having visited set [((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set [((4, 4), (1, 0)); ((5, 4), (1, 0)); ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((4, 4), (0, -1)); ((4, 4), (1, 0)); ((4, 5), (0, -1)); ((4, 6), (0, -1));
   ((5, 4), (1, 0)); ((6, 4), (1, 0))]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((4, 4), (0, -1)); ((4, 4), (1, 0)); ((4, 5), (0, -1)); ((4, 6), (0, -1));
   ((5, 4), (1, 0)); ((6, 4), (0, 1)); ((6, 4), (1, 0)); ((6, 5), (0, 1));
   ((6, 6), (0, 1)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 4), (0, -1));
   ((4, 4), (1, 0)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((4, 8), (-1, 0));
   ((5, 4), (1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 8), (-1, 0));
   ((3, 8), (-1, 0)); ((4, 4), (0, -1)); ((4, 4), (1, 0)); ((4, 5), (0, -1));
   ((4, 6), (0, -1)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (8, 7)
Move to (7, 7)
Add moves set
  [((1, 7), (1, 0)); ((2, 7), (1, 0)); ((3, 7), (1, 0)); ((4, 7), (1, 0));
   ((5, 7), (1, 0)); ((6, 7), (1, 0)); ((7, 7), (1, 0))]
No overlap!

At (7, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 7), (1, 0)); ((2, 8), (-1, 0)); ((3, 7), (1, 0)); ((3, 8), (-1, 0));
   ((4, 4), (0, -1)); ...]
Moving S
tryFindLargest: 7 - [(Outside, Obstacle 4); (Obstacle 4, Outside)]
Found no obstacle - exiting. No loop.
((7, 7), (1, 0))
((6, 7), (1, 0))
((5, 7), (1, 0))
((4, 7), (1, 0))
((3, 7), (1, 0))
((2, 7), (1, 0))
((1, 7), (1, 0))
((1, 7), (0, -1))
((1, 8), (0, -1))
((1, 8), (-1, 0))
((2, 8), (-1, 0))
((3, 8), (-1, 0))
((4, 8), (-1, 0))
((5, 8), (-1, 0))
((6, 8), (-1, 0))
((6, 8), (0, 1))
((6, 7), (0, 1))
((6, 6), (0, 1))
((6, 5), (0, 1))
((6, 4), (0, 1))
((6, 4), (1, 0))
((5, 4), (1, 0))
((4, 4), (1, 0))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (4, 4)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 4); (Obstacle 4, Outside)]
Found obstacle at (4, 4)
Move to (4, 5)
Add moves set [((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 5) facing (1, 0) having visited set [((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (4, 5)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 5); (Obstacle 5, Outside)]
Found obstacle at (4, 5)
Move to (4, 6)
Add moves set [((4, 6), (0, -1))]
No overlap!

At (4, 6) facing (1, 0) having visited set [((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (4, 6)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Obstacle 4); (Obstacle 4, Outside)]
Found obstacle at (4, 6)
Move to (5, 6)
Add moves set [((5, 6), (-1, 0)); ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (5, 6) facing (0, -1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((5, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (4, 7)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1));
   ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0));
   ((3, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 4), (0, -1));
   ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((2, 8), (-1, 0)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 4); (Obstacle 4, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (4, 7)
Move to (3, 7)
Add moves set [((1, 7), (1, 0)); ((2, 7), (1, 0)); ((3, 7), (1, 0))]
No overlap!

At (3, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Moving S
tryFindLargest: 7 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
((3, 7), (1, 0))
((2, 7), (1, 0))
((1, 7), (1, 0))
((1, 7), (0, -1))
((1, 8), (0, -1))
((1, 8), (-1, 0))
((2, 8), (-1, 0))
((3, 8), (-1, 0))
((4, 8), (-1, 0))
((5, 8), (-1, 0))
((6, 8), (-1, 0))
((6, 8), (0, 1))
((6, 7), (0, 1))
((6, 6), (0, 1))
((6, 5), (0, 1))
((6, 4), (0, 1))
((6, 4), (1, 0))
((5, 4), (1, 0))
((4, 4), (1, 0))
((3, 4), (1, 0))
((2, 4), (1, 0))
((2, 4), (0, -1))
((2, 5), (0, -1))
((2, 6), (0, -1))
((2, 6), (-1, 0))
((3, 6), (-1, 0))
((4, 6), (-1, 0))
((5, 6), (-1, 0))
((6, 6), (-1, 0))
((7, 6), (-1, 0))
((8, 6), (-1, 0))
((8, 6), (0, 1))
((8, 5), (0, 1))
((8, 4), (0, 1))
((8, 3), (0, 1))
((8, 2), (0, 1))
((8, 1), (0, 1))
((8, 1), (1, 0))
((7, 1), (1, 0))
((6, 1), (1, 0))
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (4, 8)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 4); (Obstacle 4, Outside)]
Found obstacle at (4, 8)
Move to (5, 8)
Add moves set [((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (5, 8) facing (0, -1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (5, 1)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 5); (Obstacle 5, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (5, 1)
Move to (4, 1)
Add moves set [((4, 1), (1, 0))]
No overlap!

At (4, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found no obstacle - exiting. No loop.
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (5, 4)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 5); (Obstacle 5, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (5, 4)
Move to (4, 4)
Add moves set [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0))]
No overlap!

At (4, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found no obstacle - exiting. No loop.
((4, 4), (1, 0))
((3, 4), (1, 0))
((2, 4), (1, 0))
((2, 4), (0, -1))
((2, 5), (0, -1))
((2, 6), (0, -1))
((2, 6), (-1, 0))
((3, 6), (-1, 0))
((4, 6), (-1, 0))
((5, 6), (-1, 0))
((6, 6), (-1, 0))
((7, 6), (-1, 0))
((8, 6), (-1, 0))
((8, 6), (0, 1))
((8, 5), (0, 1))
((8, 4), (0, 1))
((8, 3), (0, 1))
((8, 2), (0, 1))
((8, 1), (0, 1))
((8, 1), (1, 0))
((7, 1), (1, 0))
((6, 1), (1, 0))
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (5, 6)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Obstacle 5); (Obstacle 5, Outside)]
Found obstacle at (5, 6)
Move to (6, 6)
Add moves set [((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (6, 6) facing (0, -1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (5, 7)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1));
   ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0));
   ((3, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 4), (0, -1));
   ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((2, 8), (-1, 0)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 5); (Obstacle 5, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (5, 7)
Move to (4, 7)
Add moves set [((1, 7), (1, 0)); ((2, 7), (1, 0)); ((3, 7), (1, 0)); ((4, 7), (1, 0))]
No overlap!

At (4, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Moving S
tryFindLargest: 7 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found no obstacle - exiting. No loop.
((4, 7), (1, 0))
((3, 7), (1, 0))
((2, 7), (1, 0))
((1, 7), (1, 0))
((1, 7), (0, -1))
((1, 8), (0, -1))
((1, 8), (-1, 0))
((2, 8), (-1, 0))
((3, 8), (-1, 0))
((4, 8), (-1, 0))
((5, 8), (-1, 0))
((6, 8), (-1, 0))
((6, 8), (0, 1))
((6, 7), (0, 1))
((6, 6), (0, 1))
((6, 5), (0, 1))
((6, 4), (0, 1))
((6, 4), (1, 0))
((5, 4), (1, 0))
((4, 4), (1, 0))
((3, 4), (1, 0))
((2, 4), (1, 0))
((2, 4), (0, -1))
((2, 5), (0, -1))
((2, 6), (0, -1))
((2, 6), (-1, 0))
((3, 6), (-1, 0))
((4, 6), (-1, 0))
((5, 6), (-1, 0))
((6, 6), (-1, 0))
((7, 6), (-1, 0))
((8, 6), (-1, 0))
((8, 6), (0, 1))
((8, 5), (0, 1))
((8, 4), (0, 1))
((8, 3), (0, 1))
((8, 2), (0, 1))
((8, 1), (0, 1))
((8, 1), (1, 0))
((7, 1), (1, 0))
((6, 1), (1, 0))
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (5, 8)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 5); (Obstacle 5, Outside)]
Found obstacle at (5, 8)
Move to (6, 8)
Add moves set [((6, 8), (-1, 0))]
No overlap!

At (6, 8) facing (0, -1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (6, 1)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 6); (Obstacle 6, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 1)
Move to (5, 1)
Add moves set [((4, 1), (1, 0)); ((5, 1), (1, 0))]
No overlap!

At (5, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0))]
Moving S
tryFindLargest: 1 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (6, 4)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 6); (Obstacle 6, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (6, 4)
Move to (5, 4)
Add moves set [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0))]
No overlap!

At (5, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
((5, 4), (1, 0))
((4, 4), (1, 0))
((3, 4), (1, 0))
((2, 4), (1, 0))
((2, 4), (0, -1))
((2, 5), (0, -1))
((2, 6), (0, -1))
((2, 6), (-1, 0))
((3, 6), (-1, 0))
((4, 6), (-1, 0))
((5, 6), (-1, 0))
((6, 6), (-1, 0))
((7, 6), (-1, 0))
((8, 6), (-1, 0))
((8, 6), (0, 1))
((8, 5), (0, 1))
((8, 4), (0, 1))
((8, 3), (0, 1))
((8, 2), (0, 1))
((8, 1), (0, 1))
((8, 1), (1, 0))
((7, 1), (1, 0))
((6, 1), (1, 0))
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (6, 5)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 5); (Obstacle 5, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 5)
Move to (6, 4)
Add moves set [((6, 4), (0, 1))]
No overlap!

At (6, 4) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (6, 6)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (6, 6)
Move to (7, 6)
Add moves set [((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (7, 6) facing (0, -1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 4); (Obstacle 4, Outside)]
Found obstacle at (7, 4)
Move to (7, 5)
Add moves set [((7, 5), (0, -1)); ((7, 6), (0, -1))]
No overlap!

At (7, 5) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving E
tryFindLargest: 7 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (6, 7)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 7); (Obstacle 7, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 7)
Move to (6, 6)
Add moves set [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1))]
No overlap!

At (6, 6) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Found loop!
================
Adding obstruction at (6, 8)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 8); (Obstacle 8, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 8)
Move to (6, 7)
Add moves set [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1))]
No overlap!

At (6, 7) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 8); (Obstacle 8, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (7, 1)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 7); (Obstacle 7, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (7, 1)
Move to (6, 1)
Add moves set [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0))]
No overlap!

At (6, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0))]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 1), (0, 1)); ((6, 2), (0, 1)); ((6, 3), (0, 1)); ((6, 4), (0, 1));
   ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1)); ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (0, 1)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 8), (-1, 0));
   ((3, 8), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (8, 7)
Move to (7, 7)
Add moves set
  [((1, 7), (1, 0)); ((2, 7), (1, 0)); ((3, 7), (1, 0)); ((4, 7), (1, 0));
   ((5, 7), (1, 0)); ((6, 7), (1, 0)); ((7, 7), (1, 0))]
No overlap!

At (7, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 7), (1, 0)); ((2, 8), (-1, 0)); ((3, 7), (1, 0)); ((3, 8), (-1, 0));
   ((4, 1), (0, -1)); ...]
Moving S
tryFindLargest: 7 - [(Outside, Obstacle 1); (Obstacle 1, Obstacle 4); (Obstacle 4, Outside)]
Found no obstacle - exiting. No loop.
((7, 7), (1, 0))
((6, 7), (1, 0))
((5, 7), (1, 0))
((4, 7), (1, 0))
((3, 7), (1, 0))
((2, 7), (1, 0))
((1, 7), (1, 0))
((1, 7), (0, -1))
((1, 8), (0, -1))
((1, 8), (-1, 0))
((2, 8), (-1, 0))
((3, 8), (-1, 0))
((4, 8), (-1, 0))
((5, 8), (-1, 0))
((6, 8), (-1, 0))
((6, 8), (0, 1))
((6, 7), (0, 1))
((6, 6), (0, 1))
((6, 5), (0, 1))
((6, 4), (0, 1))
((6, 3), (0, 1))
((6, 2), (0, 1))
((6, 1), (0, 1))
((6, 1), (1, 0))
((5, 1), (1, 0))
((4, 1), (1, 0))
((4, 1), (0, -1))
((4, 2), (0, -1))
((4, 3), (0, -1))
((4, 4), (0, -1))
((4, 5), (0, -1))
((4, 6), (0, -1))
================
Adding obstruction at (7, 6)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 6)
Move to (8, 6)
Add moves set [((8, 6), (-1, 0))]
No overlap!

At (8, 6) facing (0, -1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (7, 7)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1));
   ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0));
   ((3, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 4), (0, -1));
   ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((2, 8), (-1, 0)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (7, 7)
Move to (6, 7)
Add moves set
  [((1, 7), (1, 0)); ((2, 7), (1, 0)); ((3, 7), (1, 0)); ((4, 7), (1, 0));
   ((5, 7), (1, 0)); ((6, 7), (1, 0))]
No overlap!

At (6, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Found loop!
================
Adding obstruction at (7, 8)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1));
   ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0));
   ((3, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 4), (0, -1));
   ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((2, 8), (-1, 0)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (8, 7)
Move to (7, 7)
Add moves set
  [((1, 7), (1, 0)); ((2, 7), (1, 0)); ((3, 7), (1, 0)); ((4, 7), (1, 0));
   ((5, 7), (1, 0)); ((6, 7), (1, 0)); ((7, 7), (1, 0))]
No overlap!

At (7, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Moving S
tryFindLargest: 7 - [(Outside, Obstacle 4); (Obstacle 4, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (7, 8)
Move to (7, 7)
Add moves set [((7, 7), (0, 1))]
No overlap!

At (7, 7) facing (-1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Moving W
tryFindSmallest: 7 - [(Outside, Obstacle 8); (Obstacle 8, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (7, 9)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 7)
Move to (8, 6)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1)); ((8, 6), (0, 1))]
No overlap!

At (8, 6) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 1); (Obstacle 1, Outside)]
Found obstacle at (1, 6)
Move to (2, 6)
Add moves set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 6), (-1, 0)); ((5, 6), (-1, 0));
   ((6, 6), (-1, 0)); ((7, 6), (-1, 0)); ((8, 6), (-1, 0))]
No overlap!

At (2, 6) facing (0, -1) having visited set
  [((2, 6), (-1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0));
   ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 3); (Obstacle 3, Outside)]
Found obstacle at (2, 3)
Move to (2, 4)
Add moves set [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (0, -1))]
No overlap!

At (2, 4) facing (1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((3, 6), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (0, -1)); ...]
Moving E
tryFindLargest: 2 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (6, 4)
Add moves set
  [((2, 4), (1, 0)); ((3, 4), (1, 0)); ((4, 4), (1, 0)); ((5, 4), (1, 0));
   ((6, 4), (1, 0))]
No overlap!

At (6, 4) facing (0, 1) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving S
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (6, 9)
Move to (6, 8)
Add moves set
  [((6, 4), (0, 1)); ((6, 5), (0, 1)); ((6, 6), (0, 1)); ((6, 7), (0, 1));
   ((6, 8), (0, 1))]
No overlap!

At (6, 8) facing (-1, 0) having visited set
  [((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ((3, 4), (1, 0)); ((3, 6), (-1, 0)); ((4, 1), (0, -1));
   ((4, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0))]
No overlap!

At (1, 8) facing (0, -1) having visited set
  [((1, 8), (-1, 0)); ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1));
   ((2, 6), (-1, 0)); ((2, 6), (0, -1)); ((2, 8), (-1, 0)); ((3, 4), (1, 0));
   ((3, 6), (-1, 0)); ...]
Moving N
tryFindSmallest: 8 - [(Outside, Obstacle 6); (Obstacle 6, Outside)]
Found obstacle at (1, 6)
Move to (1, 7)
Add moves set [((1, 7), (0, -1)); ((1, 8), (0, -1))]
No overlap!

At (1, 7) facing (1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 8), (-1, 0)); ((1, 8), (0, -1)); ((2, 4), (0, -1));
   ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0)); ((2, 6), (0, -1));
   ((2, 8), (-1, 0)); ...]
Moving E
tryFindLargest: 1 - [(Outside, Obstacle 8); (Obstacle 8, Outside)]
Found obstacle at (8, 7)
Move to (7, 7)
Add moves set
  [((1, 7), (1, 0)); ((2, 7), (1, 0)); ((3, 7), (1, 0)); ((4, 7), (1, 0));
   ((5, 7), (1, 0)); ((6, 7), (1, 0)); ((7, 7), (1, 0))]
No overlap!

At (7, 7) facing (0, 1) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Moving S
tryFindLargest: 7 - [(Outside, Obstacle 4); (Obstacle 4, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (7, 9)
Move to (7, 8)
Add moves set [((7, 7), (0, 1)); ((7, 8), (0, 1))]
No overlap!

At (7, 8) facing (-1, 0) having visited set
  [((1, 7), (0, -1)); ((1, 7), (1, 0)); ((1, 8), (-1, 0)); ((1, 8), (0, -1));
   ((2, 4), (0, -1)); ((2, 4), (1, 0)); ((2, 5), (0, -1)); ((2, 6), (-1, 0));
   ((2, 6), (0, -1)); ...]
Moving W
tryFindSmallest: 7 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (0, 8)
Move to (1, 8)
Add moves set
  [((1, 8), (-1, 0)); ((2, 8), (-1, 0)); ((3, 8), (-1, 0)); ((4, 8), (-1, 0));
   ((5, 8), (-1, 0)); ((6, 8), (-1, 0)); ((7, 8), (-1, 0))]
Overlap found -> there was a loop!
================
Adding obstruction at (8, 1)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 8); (Obstacle 8, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (8, 1)
Move to (7, 1)
Add moves set [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0))]
No overlap!

At (7, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 4); (Obstacle 4, Outside)]
Found obstacle at (7, 4)
Move to (7, 3)
Add moves set [((7, 1), (0, 1)); ((7, 2), (0, 1)); ((7, 3), (0, 1))]
No overlap!

At (7, 3) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 7 - [(Outside, Obstacle 2); (Obstacle 2, Outside)]
Found obstacle at (2, 3)
Move to (3, 3)
Add moves set
  [((3, 3), (-1, 0)); ((4, 3), (-1, 0)); ((5, 3), (-1, 0)); ((6, 3), (-1, 0));
   ((7, 3), (-1, 0))]
No overlap!

At (3, 3) facing (0, -1) having visited set
  [((3, 3), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (-1, 0)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (0, -1)); ...]
Moving N
tryFindSmallest: 3 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (8, 2)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 2); (Obstacle 2, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 2)
Move to (8, 1)
Add moves set [((8, 1), (0, 1))]
No overlap!

At (8, 1) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (8, 3)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 3); (Obstacle 3, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 3)
Move to (8, 2)
Add moves set [((8, 1), (0, 1)); ((8, 2), (0, 1))]
No overlap!

At (8, 2) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (8, 4)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 4); (Obstacle 4, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 4)
Move to (8, 3)
Add moves set [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1))]
No overlap!

At (8, 3) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 2); (Obstacle 2, Outside)]
Found obstacle at (2, 3)
Move to (3, 3)
Add moves set
  [((3, 3), (-1, 0)); ((4, 3), (-1, 0)); ((5, 3), (-1, 0)); ((6, 3), (-1, 0));
   ((7, 3), (-1, 0)); ((8, 3), (-1, 0))]
No overlap!

At (3, 3) facing (0, -1) having visited set
  [((3, 3), (-1, 0)); ((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1));
   ((4, 3), (-1, 0)); ((4, 3), (0, -1)); ((4, 4), (0, -1)); ((4, 5), (0, -1));
   ((4, 6), (0, -1)); ...]
Moving N
tryFindSmallest: 3 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (8, 5)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 5); (Obstacle 5, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 5)
Move to (8, 4)
Add moves set [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1))]
No overlap!

At (8, 4) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (7, 4)
Move to (8, 4)
Add moves set [((8, 4), (-1, 0))]
No overlap!

At (8, 4) facing (0, -1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving N
tryFindSmallest: 4 - [(Outside, Obstacle 5); (Obstacle 5, Obstacle 7); (Obstacle 7, Outside)]
Found no obstacle - exiting. No loop.
================
Adding obstruction at (8, 6)
---------------------
Check board for loop!

At (4, 6) facing (0, -1) having visited set []
Moving N
tryFindSmallest: 6 - [(Outside, Obstacle 0); (Obstacle 0, Outside)]
Found obstacle at (4, 0)
Move to (4, 1)
Add moves set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
No overlap!

At (4, 1) facing (1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 2), (0, -1)); ((4, 3), (0, -1)); ((4, 4), (0, -1));
   ((4, 5), (0, -1)); ((4, 6), (0, -1))]
Moving E
tryFindLargest: 4 - [(Outside, Obstacle 9); (Obstacle 9, Outside)]
Found obstacle at (9, 1)
Move to (8, 1)
Add moves set
  [((4, 1), (1, 0)); ((5, 1), (1, 0)); ((6, 1), (1, 0)); ((7, 1), (1, 0));
   ((8, 1), (1, 0))]
No overlap!

At (8, 1) facing (0, 1) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving S
tryFindLargest: 1 - [(Outside, Obstacle 6); (Obstacle 6, Obstacle 7); (Obstacle 7, Outside)]
Found obstacle at (8, 6)
Move to (8, 5)
Add moves set
  [((8, 1), (0, 1)); ((8, 2), (0, 1)); ((8, 3), (0, 1)); ((8, 4), (0, 1));
   ((8, 5), (0, 1))]
No overlap!

At (8, 5) facing (-1, 0) having visited set
  [((4, 1), (0, -1)); ((4, 1), (1, 0)); ((4, 2), (0, -1)); ((4, 3), (0, -1));
   ((4, 4), (0, -1)); ((4, 5), (0, -1)); ((4, 6), (0, -1)); ((5, 1), (1, 0));
   ((6, 1), (1, 0)); ...]
Moving W
tryFindSmallest: 8 - [(Outside, Outside)]
Found no obstacle - exiting. No loop.
6
00:00:00.2411190
